#include <iostream>
using namespace std;

class linq
{
	int rear,front;
	
	public:
		linq()   {
			rear=-1;
			front=-1;
		}
		void enqueue(int[],int);
		void dequeue(int[],int);
		void display(int[]);
		
};

void linq::enqueue(int arr[],int n)   {
	int x;
	cout<<"enter item";
	cin>>x;
	
	if(rear==n-1)   {
         cout<<"overflow";
	}
	else if(rear==-1 && front==-1)   {
		rear=front=0;
		arr[rear]=x;
	}
	else {
		rear++;
			arr[rear]=x;
		
		
	}
}

void linq::dequeue(int arr[],int n)   {
	int dlt;
	if(rear==-1 && front==-1)  {
		cout<<"is empty";
	}
	else if(rear==front)  {
		rear=-1;
		front=-1;
	}
	
	else {
		arr[front]=dlt;
		front++;
	}
}

void linq::display(int arr[])   {
	if(rear==-1 && front==-1)   {
		cout<<"is empty";
	}
	else {
		for(int i=front;i<=rear;i++)   {
			cout<<arr[i];
		}
	}
	
	
}
int main()
{
	linq p;
	int n,ch,arr[n];
	cout<<"enter the numbers";
	cin>>n;
	do{
		
	cout<<"enter your choice";
	cout<<"\n1.enqueue  \n2.dequeue \n3.display";
	cin>>ch;
	
	switch(ch)    {
		case 1:
			p.enqueue(arr,n);
			break;
		case 2:
			p.dequeue(arr,n);
			break;
		case 3:
		    p.display(arr);	
	}
}while(ch!=0);
}
